(window.webpackJsonp=window.webpackJsonp||[]).push([[31],{658:function(t,e,s){"use strict";s.r(e);var a=s(4),r=Object(a.a)({},(function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"移动-web"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#移动-web"}},[t._v("#")]),t._v(" 移动 Web")]),t._v(" "),s("h3",{attrs:{id:"媒体查询"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#媒体查询"}},[t._v("#")]),t._v(" 媒体查询")]),t._v(" "),s("h4",{attrs:{id:"媒体查询的作用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#媒体查询的作用"}},[t._v("#")]),t._v(" 媒体查询的作用")]),t._v(" "),s("p",[t._v("根据终端(媒介|媒体)的特性(网页宽高 设备宽高 横竖屏)，可以给不同的样式")]),t._v(" "),s("h4",{attrs:{id:"媒体查询的用法-not-非-and-且-or-或者"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#媒体查询的用法-not-非-and-且-or-或者"}},[t._v("#")]),t._v(" 媒体查询的用法(not(非) and(且) or(或者))")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("不同的设备应用不同的 css 文件(优点:对于不同的设备有对应的 css 文件，代码好维护且清晰 缺点: 产生了大量的冗余代码)\n"),s("code",[t._v('语法: <link rel="stylesheet" type="text/css" href="css的路径" media="过滤条件" >')])])]),t._v(" "),s("li",[s("p",[t._v("不同的设备应用不同的 css 样式(缺点:代码不好维护且不够清晰 优点: 不会产生了大量的冗余代码)\n"),s("code",[t._v("语法: @media screen and (width: xxxx) and (height: xxxx) { 样式}")])]),t._v(" "),s("p",[s("code",[t._v("每个单词之间用空格隔开 否则会出错")])])])]),t._v(" "),s("h4",{attrs:{id:"媒体特性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#媒体特性"}},[t._v("#")]),t._v(" 媒体特性")]),t._v(" "),s("ul",[s("li",[t._v("html 宽 html 高")]),t._v(" "),s("li",[t._v("设备宽 设备高")]),t._v(" "),s("li",[t._v("最大宽 最大高")]),t._v(" "),s("li",[t._v("最小宽 最小高")]),t._v(" "),s("li",[t._v("横屏 竖屏")])]),t._v(" "),s("h3",{attrs:{id:"rem-布局"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#rem-布局"}},[t._v("#")]),t._v(" rem 布局")]),t._v(" "),s("h4",{attrs:{id:"rem"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#rem"}},[t._v("#")]),t._v(" rem")]),t._v(" "),s("p",[t._v("rem 是一个相对长度单位 em 相对于自己的 font-size"),s("br"),t._v("\nrem 相对的是 html 的 font-size")]),t._v(" "),s("h4",{attrs:{id:"rem-布局原理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#rem-布局原理"}},[t._v("#")]),t._v(" rem 布局原理")]),t._v(" "),s("ul",[s("li",[t._v("1.找一个设计图 假设 640 人为的分成 20 份 计算一分多少像素 32 像素")]),t._v(" "),s("li",[t._v("2.用 ps 量出设计图中的元素的大小 用这个大小/32 计算得到的是元素在设计图中的占了几份")]),t._v(" "),s("li",[t._v("3.适配手机 如果宽度为 320 的手机 用手机的宽度/20 得出一份是多少像素 再用刚才第二步得到的份数*手机中一份的大小就是手机中真正占的像素")])]),t._v(" "),s("h3",{attrs:{id:"rem-布局的插件-插件-https-www-w3cplus-com-https-github-com-huainanhai-flexible"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#rem-布局的插件-插件-https-www-w3cplus-com-https-github-com-huainanhai-flexible"}},[t._v("#")]),t._v(" rem 布局的插件(插件) https://www.w3cplus.com/ https://github.com/huainanhai/flexible")]),t._v(" "),s("p",[t._v("flexible 的作用是为了不写媒体查询 通过 js 自动检测 自动计算")]),t._v(" "),s("ul",[s("li",[s("ol",[s("li",[t._v("引入 flexible_css.debug.js")])])]),t._v(" "),s("li",[s("ol",{attrs:{start:"2"}},[s("li",[t._v("引入 flexible.debug.js")])])]),t._v(" "),s("li",[s("ol",{attrs:{start:"3"}},[s("li",[t._v("引入 css")])])])]),t._v(" "),s("p",[s("code",[t._v("公式: 属性: calc(设计图量出来的尺寸rem / 设计图的宽度/10)")])])])}),[],!1,null,null,null);e.default=r.exports}}]);